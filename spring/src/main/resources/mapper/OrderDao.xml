<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.dao.OrderDao">

    <resultMap type="spring.entity.Order" id="OrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
        <result property="num" column="num" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrderMap">
        select
id, product_name, num
        from `order`
        where id = #{id}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from `order`
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="productName != null and productName != ''">
                and product_name = #{productName}
            </if>
            <if test="num != null">
                and num = #{num}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into `order`(product_name, num)
        values (#{productName}, #{num})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into `order`(product_name, num)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.productName}, #{entity.num})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into `order`(product_name, num)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productName}, #{entity.num})
        </foreach>
        on duplicate key update
product_name = values(product_name),
num = values(num)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update `order`
        <set>
            <if test="productName != null and productName != ''">
                product_name = #{productName},
            </if>
            <if test="num != null">
                num = #{num},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from `order` where id = #{id}
    </delete>

</mapper>
